#pragma once
#define _CRT_SECURE_NO_WARNINGS // отключаем предупреждения о небезопасности
#include <iostream> 
#include <string> // для работы со строками
#include <cstdlib> // для функций rand() и srand()
#include <ctime> // для работы функции time()
#include <iomanip>
using namespace std;

//ЛАБОРАТОРНАЯ РАБОТА № 11Е.
/*

Создать класс Время (часы, минуты, секунды).
– Класс должен содержать гетеры и сеттеры 
(методы изменения времени на заданное количество
часов, минут и секунд и вывода значений каждого поля) 
с проверкой допустимости вводимых значений.
В случае недопустимых значений полей – корректно 
обработать ситуацию.
– Создать функцию вывода всего объекта время на экран.
– Создать функцию подсчета разности времен двух объектов.
– Создать функцию сравнения времен двух объектов.
– Определить угол между часовой и минутной стрелками.

*/
class TIME
{
	// переменная количества секунд
	time_t sec;
public:
	TIME()
	{
		sec = 0;
	}
	// геттер	
	time_t getter();
	// разность
	TIME substract(TIME & other);
	// больше меньше
	bool is_bigger(const TIME & other);
	// расчет угла
	double angle_calc();
	// перегрузка оператора вывода
	friend ostream& operator<< (ostream& out, TIME& a);
	// перегрузка оператора ввода
	friend istream& operator>> (istream & in, TIME & a);
};